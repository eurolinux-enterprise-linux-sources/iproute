commit 7b8179c780a1abd547e5002c4e6fba898c6d72bb
Author: Greg Rose <gregory.v.rose@intel.com>
Date:   Thu Oct 13 20:31:32 2011 +0000

    iproute2: Add new command to ip link to enable/disable VF spoof check
    
    Add ip link command parsing for VF spoof checking enable/disable
    
    V2 - Fixed problem with parsing of dump info on kernels that don't
         support the spoof checking option and also wrapped the ifla_vf_info
         structure in #ifdef __KERNEL__ to prevent user space from directly
         accessing the structure
    V3 - Improved parsing of vfinfo
    V4 - Put Makefile back to proper list of subdirs
    V5 - Remove struct ifla_vf_info, it is only used by the kernel
    V6 - Make sure spoof check is reported by the driver - rtnl will set
         it to -1 to indicate driver didn't report a value.
    
    Signed-off-by: Greg Rose <gregory.v.rose@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>

Index: iproute2-2.6.31/ip/ipaddress.c
===================================================================
--- iproute2-2.6.31.orig/ip/ipaddress.c
+++ iproute2-2.6.31/ip/ipaddress.c
@@ -191,7 +191,9 @@ static void print_vfinfo(FILE *fp, struc
 	struct ifla_vf_mac *vf_mac;
 	struct ifla_vf_vlan *vf_vlan;
 	struct ifla_vf_tx_rate *vf_tx_rate;
+	struct ifla_vf_spoofchk *vf_spoofchk;
 	struct rtattr *vf[IFLA_VF_MAX+1];
+	struct rtattr *tmp;
 	SPRINT_BUF(b1);
 
 	if (vfinfo->rta_type != IFLA_VF_INFO) {
@@ -205,6 +207,17 @@ static void print_vfinfo(FILE *fp, struc
 	vf_vlan = RTA_DATA(vf[IFLA_VF_VLAN]);
 	vf_tx_rate = RTA_DATA(vf[IFLA_VF_TX_RATE]);
 
+	/* Check if the spoof checking vf info type is supported by
+	 * this kernel.
+	 */
+	tmp = (struct rtattr *)((char *)vf[IFLA_VF_TX_RATE] +
+			vf[IFLA_VF_TX_RATE]->rta_len);
+
+	if (tmp->rta_type != IFLA_VF_SPOOFCHK)
+		vf_spoofchk = NULL;
+	else
+		vf_spoofchk = RTA_DATA(vf[IFLA_VF_SPOOFCHK]);
+
 	fprintf(fp, "\n    vf %d MAC %s", vf_mac->vf,
 		ll_addr_n2a((unsigned char *)&vf_mac->mac,
 		ETH_ALEN, 0, b1, sizeof(b1)));
@@ -214,6 +227,12 @@ static void print_vfinfo(FILE *fp, struc
 		fprintf(fp, ", qos %d", vf_vlan->qos);
 	if (vf_tx_rate->rate)
 		fprintf(fp, ", tx rate %d (Mbps)", vf_tx_rate->rate);
+	if (vf_spoofchk && vf_spoofchk->setting != -1) {
+		if (vf_spoofchk->setting)
+			fprintf(fp, ", spoof checking on");
+		else
+			fprintf(fp, ", spoof checking off");
+	}
 }
 
 int print_linkinfo(const struct sockaddr_nl *who,
Index: iproute2-2.6.31/ip/iplink.c
===================================================================
--- iproute2-2.6.31.orig/ip/iplink.c
+++ iproute2-2.6.31/ip/iplink.c
@@ -70,7 +70,10 @@ void iplink_usage(void)
 	fprintf(stderr, "			  [ alias NAME ]\n");
 	fprintf(stderr, "	                  [ vf NUM [ mac LLADDR ]\n");
 	fprintf(stderr, "				   [ vlan VLANID [ qos VLAN-QOS ] ]\n");
+
 	fprintf(stderr, "				   [ rate TXRATE ] ] \n");
+
+	fprintf(stderr, "				   [ spoofchk { on | off} ] ] \n");
 	fprintf(stderr, "       ip link show [ DEVICE ]\n");
 
 	if (iplink_have_newlink()) {
@@ -231,6 +234,18 @@ int iplink_parse_vf(int vf, int *argcp,
 			ivt.vf = vf;
 			addattr_l(&req->n, sizeof(*req), IFLA_VF_TX_RATE, &ivt, sizeof(ivt));
 		
+		} else if (matches(*argv, "spoofchk") == 0) {
+			struct ifla_vf_spoofchk ivs;
+			NEXT_ARG();
+			if (matches(*argv, "on") == 0)
+				ivs.setting = 1;
+			else if (matches(*argv, "off") == 0)
+				ivs.setting = 0;
+			else
+				invarg("Invalid \"spoofchk\" value\n", *argv);
+			ivs.vf = vf;
+			addattr_l(&req->n, sizeof(*req), IFLA_VF_SPOOFCHK, &ivs, sizeof(ivs));
+
 		} else {
 			/* rewind arg */
 			PREV_ARG();
Index: iproute2-2.6.31/man/man8/ip.8
===================================================================
--- iproute2-2.6.31.orig/man/man8/ip.8
+++ iproute2-2.6.31/man/man8/ip.8
@@ -67,7 +67,9 @@ ip \- show / manipulate routing, devices
 .B qos
 .IR VLAN-QOS " ] ] ["
 .B rate
-.IR TXRATE " ]"
+.IR TXRATE " ] ["
+.B spoofchk { on | off }
+] |
 .BR " }"
 
 
@@ -974,6 +976,10 @@ as 0 disables VLAN tagging and filtering
 Setting this parameter to 0 disables rate limiting. The
 .B vf
 parameter must be specified.
+.sp
+.BI spoofchk " on|off"
+- turn packet spoof checking on or off for the specified VF.
+
 .in -8
 
 .PP
Index: iproute2-2.6.31/include/linux/if_link.h
===================================================================
--- iproute2-2.6.31.orig/include/linux/if_link.h
+++ iproute2-2.6.31/include/linux/if_link.h
@@ -280,6 +280,7 @@ enum {
 	IFLA_VF_MAC,		/* Hardware queue specific attributes */
 	IFLA_VF_VLAN,
 	IFLA_VF_TX_RATE,	/* TX Bandwidth Allocation */
+	IFLA_VF_SPOOFCHK,	/* Spoof Checking on/off switch */
 	__IFLA_VF_MAX,
 };
 
@@ -301,6 +302,11 @@ struct ifla_vf_tx_rate {
 	__u32 rate; /* Max TX bandwidth in Mbps, 0 disables throttling */
 };
 
+struct ifla_vf_spoofchk {
+	__u32 vf;
+	__u32 setting;
+};
+
 struct ifla_vf_info {
 	__u32 vf;
 	__u8 mac[32];
